
module gray_to_bin_0 ( b, g );
  output [3:0] b;
  input [3:0] g;
  wire   \g[3] ;
  assign b[3] = \g[3] ;
  assign \g[3]  = g[3];

  XOR2X1 U1 ( .A(g[0]), .B(b[1]), .Y(b[0]) );
  XOR2X1 U2 ( .A(b[2]), .B(g[1]), .Y(b[1]) );
  XOR2X1 U3 ( .A(g[2]), .B(\g[3] ), .Y(b[2]) );
endmodule


module gray_to_bin_1 ( b, g );
  output [3:0] b;
  input [3:0] g;
  wire   \g[3] ;
  assign b[3] = \g[3] ;
  assign \g[3]  = g[3];

  XOR2X1 U1 ( .A(g[0]), .B(b[1]), .Y(b[0]) );
  XOR2X1 U2 ( .A(b[2]), .B(g[1]), .Y(b[1]) );
  XOR2X1 U3 ( .A(g[2]), .B(\g[3] ), .Y(b[2]) );
endmodule


module bin_to_gray ( g, b );
  output [4:0] g;
  input [4:0] b;
  wire   \b[4] ;
  assign g[4] = \b[4] ;
  assign \b[4]  = b[4];

  XOR2X1 U1 ( .A(\b[4] ), .B(b[3]), .Y(g[3]) );
  XOR2X1 U2 ( .A(b[3]), .B(b[2]), .Y(g[2]) );
  XOR2X1 U3 ( .A(b[2]), .B(b[1]), .Y(g[1]) );
  XOR2X1 U4 ( .A(b[1]), .B(b[0]), .Y(g[0]) );
endmodule


module gray_adder ( x, a, b );
  output [4:0] x;
  input [3:0] a;
  input [3:0] b;
  wire   \add_48/carry[3] , \add_48/carry[2] , \add_48/carry[1] ;
  wire   [3:0] a_bin;
  wire   [3:0] b_bin;
  wire   [4:0] sum;

  gray_to_bin_0 convert_a ( .b(a_bin), .g(a) );
  gray_to_bin_1 convert_b ( .b(b_bin), .g(b) );
  bin_to_gray convert_x ( .g(x), .b(sum) );
  FAX1 \add_48/U1_0  ( .A(a_bin[0]), .B(b_bin[0]), .C(1'b0), .YC(
        \add_48/carry[1] ), .YS(sum[0]) );
  FAX1 \add_48/U1_1  ( .A(a_bin[1]), .B(b_bin[1]), .C(\add_48/carry[1] ), .YC(
        \add_48/carry[2] ), .YS(sum[1]) );
  FAX1 \add_48/U1_2  ( .A(a_bin[2]), .B(b_bin[2]), .C(\add_48/carry[2] ), .YC(
        \add_48/carry[3] ), .YS(sum[2]) );
  FAX1 \add_48/U1_3  ( .A(a_bin[3]), .B(b_bin[3]), .C(\add_48/carry[3] ), .YC(
        sum[4]), .YS(sum[3]) );
endmodule

